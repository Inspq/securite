- name: Creation du Conteneur
  hosts: idm
  vars:
    mod_jk_version: 1.2.42
    app: openam
  tasks:
    - name: Installation des packages pre-requis
      yum: 
        name: "{{ item }}"
        state: present
      with_items:
       - docker-engine
       - python-pip
       - httpd-devel
       - libtool
       - apr 
       - apr-devel
       - apr-util
       - apr-util-devel
       - gcc
       - gcc-c++
       - make 
       - autoconf
    
    - name: Demarrage de Docker
      service: name=docker state=started
        
    - name: Docker-PY
      pip:
        name: "{{ item }}"
      with_items:
      - docker-py==1.5.0
      
    - name: Conteneur OpenAM
      docker:
        name: "{{ container_name }}"
        image: "{{ docker_image }}:{{ docker_image_version }}"
        state: started
        restart_policy: unless-stopped
        ports:
        - "{{ openam_port_host }}:{{ openam_port_container }}"
        - "{{ openam_ajp_port_host }}:{{ openam_ajp_port_container }}"
        - "{{ opends_admin_port_host }}:{{ opends_admin_port_container }}"
        - "{{ opends_jmx_port_host }}:{{ opends_jmx_port_container }}"
        - "{{ opends_ldap_port_host }}:{{ opends_ldap_port_container }}"
        volumes:
        - "{{ openam_basedir_host }}:{{ openam_basedir_container }}"
        
    - name: Télécharger mod_jk
      command: wget http://apache.parentingamerica.com/tomcat/tomcat-connectors/jk/tomcat-connectors-{{ mod_jk_version }}-src.tar.gz 
      args:
        creates: /usr/lib64/httpd/modules/mod_jk.so
        chdir: /tmp
      
    - name: Decompresser mod_jk
      command: tar -zxvf tomcat-connectors-{{ mod_jk_version }}-src.tar.gz 
      args:
        creates: /usr/lib64/httpd/modules/mod_jk.so
        chdir: /tmp

    - name: Configurer mod_jk
      command: ./configure --with-apxs=/usr/bin/apxs 
      args:
        creates: /usr/lib64/httpd/modules/mod_jk.so
        chdir: /tmp/tomcat-connectors-{{ mod_jk_version }}-src/native

    - name: Compiler mod_jk
      command: make 
      args:
        creates: /usr/lib64/httpd/modules/mod_jk.so
        chdir: /tmp/tomcat-connectors-{{ mod_jk_version }}-src/native

    - name: Installer les librairies mod_jk
      command: libtool --finish /usr/lib64/httpd/modules 
      args:
        creates: /usr/lib64/httpd/modules/mod_jk.so
        chdir: /tmp/tomcat-connectors-{{ mod_jk_version }}-src/native

    - name: Installer mod_jk
      command: make install 
      args:
        creates: /usr/lib64/httpd/modules/mod_jk.so
        chdir: /tmp/tomcat-connectors-{{ mod_jk_version }}-src/native

    - name: Copier le fichier de configuration de base du mod_jk
      copy:
        src: mod_jk.conf
        dest: /etc/httpd/conf.d
            
    - name: Creer le fichier workers.properties
      template:
        src: worker-template.properties
        dest: /etc/httpd/conf/workers.properties
        force: no
             